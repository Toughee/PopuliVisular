{"version":3,"sources":["components/main.jsx","components/growthData.js","components/growingCities.jsx","components/smallestCities.jsx","App.js","reportWebVitals.js","index.js"],"names":["main","dataConfig","labels","datasets","label","backgroundColor","borderColor","borderWidth","data","growthData","className","React","Component","growingCities","smallestCities","Start","class","to","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"6NASeA,MATf,WACI,OACI,yB,QCCFC,EAAa,CACjBC,OAAQ,CAAG,YACD,YACA,YACA,YACA,YACA,YACA,YACA,aACVC,SAAU,CACR,CACEC,MAAO,kCACPC,gBAAiB,OACjBC,YAAa,QACbC,YAAa,GACbC,KAAM,CAAC,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,IAAK,QAKhCC,E,4JACnB,WACE,OACI,qBAAKC,UAAU,SAAf,SACA,cAAC,IAAD,CACEF,KAAMP,U,GALwBU,IAAMC,WCpBxCX,EAAa,CACjBC,OAAQ,CAAC,sBACD,sBACA,yBACA,qBACA,gCACA,kCACRC,SAAU,CACR,CACEC,MAAO,oCACPC,gBAAiB,CAAC,MAAM,SAAS,SAAS,QAAQ,OAAQ,UAC1DC,YAAa,QACbC,YAAa,EACbC,KAAM,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,UAK3BK,E,4JACnB,WACE,OACE,qBAAKH,UAAU,SAAf,SACE,cAAC,IAAD,CACEF,KAAMP,U,GAL2BU,IAAMC,WClB3CX,EAAa,CACjBC,OAAQ,CAAK,oBACC,qBACA,wBACA,wBACA,mBACA,sBACdC,SAAU,CACR,CACEC,MAAO,mCACPC,gBAAiB,CAAC,MAAM,SAAS,SAAS,QAAQ,OAAQ,UAC1DC,YAAa,QACbC,YAAa,GACbC,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,MAKXM,E,4JACnB,WACE,OACE,qBAAKJ,UAAU,SAAf,SACE,cAAC,IAAD,CACEF,KAAMP,U,GAL4BU,IAAMC,W,eC0DnCG,G,mKAlEX,WACI,OACE,0BAASC,MAAM,2BAAf,UACgC,iDACZ,4FAE9B,eAAC,IAAD,WACU,8BACA,cAAC,IAAD,CAAMC,GAAG,QAAT,SACI,iCACE,sBAAMD,MAAM,aAAZ,gCAKa,8BACnB,cAAC,IAAD,CAAMC,GAAG,cAAT,SACA,mCACE,sBAAMD,MAAM,aAAZ,2BADF,iCAMmB,8BACnB,cAAC,IAAD,CAAMC,GAAG,iBAAT,SAEA,mCACyB,sBAAMD,MAAM,aAAZ,gCADzB,iCAOmB,8BACnB,cAAC,IAAD,CAAMC,GAAG,kBAAT,SACE,mCACE,sBAAMD,MAAM,aAAZ,gCADF,yBAMF,cAAC,IAAD,CACEE,KAAK,QACLC,UAAWnB,IAGb,cAAC,IAAD,CACEkB,KAAK,cACLC,UAAWV,IAGvB,cAAC,IAAD,CACYS,KAAK,iBACLC,UAAWN,IAGvB,cAAC,IAAD,CACYK,KAAK,kBACLC,UAAWL,c,GA3DHH,IAAMC,YCAXQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAD,MAEFC,SAASC,eAAe,SAM1Bd,K","file":"static/js/main.13ca88e9.chunk.js","sourcesContent":["function main() {\n    return (\n        <div>\n        </div>\n    );\n}\n\n\n\nexport default main;","import React from 'react';\nimport {Line} from 'react-chartjs-2';\n\nconst dataConfig = {\n  labels: [  '1940-1950',\n            '1950-1960',\n            '1960-1970',\n            '1970-1980',\n            '1980-1990',\n            '1990-2000',\n            '2000-2010',\n            '2010-2020',],\n  datasets: [\n    {\n      label: 'Population growth in percentage',\n      backgroundColor: 'blue',\n      borderColor: 'black',\n      borderWidth: 0.3,\n      data: [14.5, 18.5, 13.3, 11.5, 9.8, 13.2, 9.7, 7.4]\n    }\n  ]\n}\n\nexport default class growthData extends React.Component {\n  render() {\n    return (\n        <div className=\"charts\">\n        <Line\n          data={dataConfig}\n        />\n      </div>\n    );\n  }\n}","import React from 'react';\nimport {Pie} from 'react-chartjs-2';\n\nconst dataConfig = {\n  labels: ['Herriman City, Utah', \n          'Leander City, Texas', \n          'Little Elm City, Texas', \n          'Forney City, Texas', \n          'Bluffton Town, South Carolina',\n          'Fort Mill Town, South Carolina',],\n  datasets: [\n    {\n      label: 'Fastest growing cities in the USA',\n      backgroundColor: ['red','orange','yellow','green','blue', 'purple'],\n      borderColor: 'black',\n      borderWidth: 2,\n      data: [21768, 27288, 25892, 13819, 13054, 11529]\n    }\n  ]\n}\n\nexport default class growingCities extends React.Component {\n  render() {\n    return (\n      <div className=\"charts\">\n        <Pie\n          data={dataConfig}\n        />\n      </div>\n    );\n  }\n}","import React from 'react';\nimport {Pie} from 'react-chartjs-2';\n\nconst dataConfig = {\n  labels: [    'McMullen, Alabama', \n                'Hobart Bay, Alaska', \n                'Magnet Cove, Arkansas', \n                'Weeki Wachee, Florida', \n                'Hartly, Delaware',\n                'Tate City, Georgia'],\n  datasets: [\n    {\n      label: 'Least Populated areas in the USA',\n      backgroundColor: ['red','orange','yellow','green','blue', 'purple'],\n      borderColor: 'black',\n      borderWidth: 0.3,\n      data: [9, 1, 5, 1, 5, 16, 0]\n    }\n  ]\n}\n\nexport default class smallestCities extends React.Component {\n  render() {\n    return (\n      <div className=\"charts\">\n        <Pie\n          data={dataConfig}\n        />\n      </div>\n    );\n  }\n}","import React from 'react';\nimport main from './components/main';\n\nimport growthData from './components/growthData';\nimport growingCities from './components/growingCities';\nimport smallestCities from './components/smallestCities';\n\n\nimport { BrowserRouter, Route, Link } from \"react-router-dom\"\n\nimport './css/main.css';\n\nclass Start extends React.Component {\n    render() {\n        return (\n          <article class=\"main-container component\">\n                                          <h1>Popular Visular</h1>\n                              <h2>Showcasing changes in the USA during the span of a century</h2>\n\n<BrowserRouter>\n          <nav>\n          <Link to=\"/main\">                               \n              <button>\n                <span class=\"icon_style\">üè†</span>\n              </button>\n          </Link>\n                             </nav>\n\n                             <nav>\n          <Link to=\"/growthData\">\n          <button>\n            <span class=\"icon_style\"> üìà</span> Population growth in %\n        </button>\n          </Link>\n                             </nav>\n\n                             <nav>\n          <Link to=\"/growingCities\">\n          \n          <button>\n                                   <span class=\"icon_style\">üèôÔ∏è</span> Fastest growing cities\n          </button>\n          \n          </Link>\n                             </nav>\n\n                             <nav>\n          <Link to=\"/smallestCities\">\n            <button>\n              <span class=\"icon_style\">üèöÔ∏è</span> Smallest towns\n          </button>          \n          </Link>\n                             </nav>\n\n          <Route \n            path=\"/main\"\n            component={main}\n            />\n\n          <Route \n            path=\"/growthData\"\n            component={growthData}\n            />\n\n<Route \n            path=\"/growingCities\"\n            component={growingCities}\n            />\n\n<Route \n            path=\"/smallestCities\"\n            component={smallestCities}\n            />\n</BrowserRouter>\n    </article>\n    );  \n  }\n}\n\nexport default Start;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}